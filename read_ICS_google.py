#  read ICS generated by Google Calendar when exporting a calendar!!!
# (C) Antonio Maulucci 2019 ~ sites.google.com/view/antomau

import json
import sys

def main():

    fname = input('file name?: ')

    '''
    data structure:
    [evento]:
        [luogo] : str
        [data e ora inizio] : list[data, ora]
        [data e ora inizio] : list[data, ora]
    ===
    ['evento']:
        [luogo]: 'luogo'
        [descrizione] : 'descrizione'
        [datai] = [data, ora]
        [dataf] = [data, ora]
    '''

    
    calendar = dict()
    datai = []
    dataf = []
    summary = ""
    loc = ""
    descr = ""

    with open(fname, 'r') as f:
        #---
        #---
        curLine = f.readline()
        while curLine:
            # print(curLine)
            res = curLine.find('DTSTART')
            # print(res)
            if res>-1: # trovato un nuovo evento (data e ora di inizio)
                if curLine[7] != ';': # DTSTART:20131105T170000Z
                    datai.append(curLine[8:16]) # data
                    datai.append(curLine[17:23])
                else: # DTSTART;VALUE=DATE:20260626
                    datai.append(curLine[19:-1])
                # print(f'datai= {datai}')
            ####
            res = curLine.find('DTEND') #-2
            if res>-1:
                if curLine[5] != ';':
                    dataf.append(curLine[6:14])
                    dataf.append(curLine[15:21])
                else:
                    dataf.append(curLine[17:-1])
                # print(f'dataf= {dataf}')
            # print(f'debug 53 : datai = {datai} _ dataf = {dataf} _ curline = {curLine}')
            ####
            res = curLine.find('DESCRIPTION')
            if res>-1:
                descr = curLine[12:-1]
            ####
            res = curLine.find('LOCATION')
            if res>-1:
                loc = curLine[9:-1]
            ####
            res = curLine.find('SUMMARY')
            if res>-1:
                # print(f'summary = {curLine[8:-1]}')
                summary = curLine[8:-1]
                calendar[summary] = dict()
                # print(f'debug datai = {datai}')
                calendar[summary]['datainizio'] = datai
                calendar[summary]['datafine'] = dataf
                if loc != "":
                    calendar[summary]['location'] = loc
                if descr != "":
                    calendar[summary]['description'] = descr
            # ---
            # ==============================
            '''
            azzerare i dati trovati in precedenza solo dopo aver aggiunto un nuovo evento al calendario
            '''
            res = curLine.find('END:VEVENT')
            if res>-1:
                # print(f'debug : end of event : {calendar[summary]}')
                datai = []
                dataf = []
                summary = ""
                loc = ""
                descr = ""
            # ==============================
            curLine = f.readline()

    print(f'CALENDARIO = {calendar}')
    for _ in range(0,7):
        print()

    json_cal = json.dumps(calendar)
    print(f'cal = {json_cal}')

    # print(sys.argv)
    for index, arg in enumerate(sys.argv):
        # print(f'index = {index}')
        # if arg in ['-f']:
        #     print(index)
        if arg in ['-f', '--tofile'] and len(sys.argv) > index+1:
            with open(sys.argv[index+1], 'w') as outf:
                outf.write(json_cal)
                del sys.argv[index]
                # print(sys.argv)
    for index, arg in enumerate(sys.argv):
        if arg in ['-df', '--dict-to-file'] and len(sys.argv) > index+1:
            with open(sys.argv[index+1], 'w') as outf:
                outf.write(calendar)
                del sys.argv[index]




if __name__ == '__main__':
    main()